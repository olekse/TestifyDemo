
DROP TABLE IF EXISTS StudentGroupCourses;
DROP TABLE IF EXISTS Results;
DROP TABLE IF EXISTS Answer;
DROP TABLE IF EXISTS Task;
DROP TABLE IF EXISTS Test;
DROP TABLE IF EXISTS Student;
DROP TABLE IF EXISTS StudentGroup;
DROP TABLE IF EXISTS Language;
DROP TABLE IF EXISTS Course;
DROP TABLE IF EXISTS Subject;


CREATE TABLE Subject (
   ID  INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
   NAME VARCHAR (36) NOT NULL,
   DESCRIPTION TEXT NOT NULL
);

CREATE TABLE Course (
   ID   INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
   SEMESTER INT NOT NULL,
   ID_SUBJECT INT NOT NULL,
   FOREIGN KEY (ID_SUBJECT) REFERENCES Subject(ID)
);

CREATE TABLE Language (
   ID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT  ,
   NAME VARCHAR (36) NOT NULL
);

CREATE TABLE StudentGroup (
	 ID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	 CODE_NAME VARCHAR (36) NOT NULL,
	 DESCRIPTION TEXT NOT NULL,
     ID_LANGUAGE INT NOT NULL,
	 FOREIGN KEY (ID_LANGUAGE) REFERENCES Language(ID)
);

CREATE TABLE Student (
   ID   INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
   NAME VARCHAR (36)     NOT NULL,
   SURNAME VARCHAR (36)  NOT NULL,
   EMAIL VARCHAR (46)    NOT NULL,
   IMAGE BLOB NOT NULL,
   ID_StudentGroup INT ,
   FOREIGN KEY (ID_StudentGroup) REFERENCES StudentGroup(ID)
);

CREATE TABLE StudentGroupCourses (
	ID_StudentGroup INT NOT NULL,
	ID_COURSE INT NOT NULL,
    PRIMARY KEY (ID_StudentGroup, ID_COURSE),
    FOREIGN KEY (ID_StudentGroup) REFERENCES StudentGroup(ID),
    FOREIGN KEY (ID_COURSE) REFERENCES Course(ID)
);


CREATE TABLE Test (
	ID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    NAME VARCHAR (36)     NOT NULL,
    DESCRIPTION TEXT NOT NULL,
    ID_COURSE INT NOT NULL,
    FOREIGN KEY (ID_COURSE) REFERENCES Course(ID)
);




CREATE TABLE Results (
	ID_STUDENT INT NOT NULL,
	ID_TEST INT NOT NULL,
	MARK INT,
	PRIMARY KEY (ID_STUDENT, ID_TEST),
    FOREIGN KEY (ID_STUDENT) REFERENCES Student(ID),
    FOREIGN KEY (ID_TEST) REFERENCES Test(ID)
);

CREATE TABLE Task (
	ID INT NOT NULL,
    TEXT TEXT     NOT NULL,
    NUMBER INT ,
    ID_TEST INT NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (ID_TEST) REFERENCES Test(ID)
);

CREATE TABLE Answer (
	ID INT NOT NULL,
    IS_CORRECT BOOLEAN NOT NULL,
    ID_TASK INT NOT NULL,
    KEY_CODE VARCHAR (36),
    ANSWER_TEXT TEXT NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (ID_TASK) REFERENCES Task(ID)
);



